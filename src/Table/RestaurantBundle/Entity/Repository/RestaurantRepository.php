<?php

namespace Table\RestaurantBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * RestaurantRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RestaurantRepository extends EntityRepository
{
    /**
     * 
     * Get Restaurants
     * 
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getRestaurants() 
    {
        $query = $this->createQueryBuilder('restaurant');
        $query->orderBy('restaurant.name', 'ASC');
 
        return $query;
    }
    
    /**
     *  Get regions
     * 
     * @return Table\RestaurantBundle\Entity\Repository[]
     */
    public function getCitiesList()
    {
        $query = $this->createQueryBuilder('restaurant')
            ->select('DISTINCT(restaurant.city)') 
            ->orderBy('restaurant.name', 'ASC')
            ->getQuery();
        
        return $query->getResult();
    }
    
    /**
     * 
     * Search Restaurants
     * 
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function searchRestaurants($request) 
    { 
        // collect parametres
        $query = $this->createQueryBuilder('restaurant');
        $searchStr = $request->request->get('restaurantSearchStr');
        $categoriesList = $request->request->get('restaurantCategoryList');
        $kitchensList = $request->request->get('restaurantKitchenList');
	$searchCity = $request->request->get('searchCity');
  
	// set dependency with category and kitchen entitues
	$query->leftJoin('restaurant.categories', 'category', 'ON restaurant.id = category.id')
	      ->leftJoin('restaurant.kitchens', 'kitchen', 'ON restaurant.id = kitchen.id');

	if (!is_null($searchCity) && $searchCity != "") {
	    $query->andWhere("restaurant.city = :searchCity")
	          ->setParameter('searchCity', $searchCity);
	}

        if (!is_null($searchStr) && $searchStr != "") {
            $query->leftJoin('restaurant.city', 'city')   
		  ->andWhere("restaurant.name like '%$searchStr%' or city.name like '%$searchStr%' or restaurant.street like '%$searchStr%' or category.name like '%$searchStr%' or kitchen.name like '%$searchStr%'");

        }
   	    
	if (!is_null($categoriesList) && !empty($categoriesList)) {
	    $query->andWhere("category.id IN(:categoriesList)")
		  ->setParameter('categoriesList', implode(",", $categoriesList));

        }
	if (!is_null($kitchensList) && !empty($kitchensList)) {
	    $query->andWhere("kitchen.id IN(:kitchensList)")
		  ->setParameter('kitchensList', implode(",", $kitchensList));

        }

        $query->orderBy('restaurant.name', 'ASC');
//var_dump($query->getQuery());
        return $query;
    }
}
