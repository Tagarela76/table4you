imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @ApplicationSonataAdminBundle/Resources/config/admin.xml }
    - { resource: sonata_core.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true,  enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }


# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%_%kernel.environment%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        #auto_mapping: true

        entity_managers:
            default:
                auto_mapping: true
                mappings:
                    ApplicationSonataMediaBundle: ~
                    FOSUserBundle: ~
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

        image:
            providers:
                - sonata.media.provider.image

            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}
       
        map_photo:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}  
                
        table_type_photo:
            providers:
                - sonata.media.provider.image
            formats:
                small: { width: 150 , quality: 95}
                big:   { width: 500 , quality: 90}            

    cdn:
        server:
            path: %base_url%uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
    providers:
        image:
            allowed_extensions: ['jpg', 'png', 'gif', 'jpeg']
            allowed_mime_types: ['image/jpg','image/jpeg','image/png','image/x-png', 'image/gif']   
fos_user:
    group:
      group_class: Application\Sonata\UserBundle\Entity\Group
    db_driver:      orm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    registration:
        confirmation: { enabled: true }
        form:
            type: table_user_registration

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:

sonata_admin:
    title:      Admin Panel
    title_logo:  %base_url%bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
       # layout: ApplicationSonataAdminBundle::standard_layout.html.twig 
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig

    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }
sonata_doctrine_orm_admin:
    # default value is null, so doctrine uses the value defined in the configuration
    entity_manager: ~

    templates:
        form:
            - SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig
gregwar_captcha: 
    charset: '123456789'

white_october_breadcrumbs:
    separator:          '/'
    separatorClass:     'divider'
    listId:             'wo-breadcrumbs'
    listClass:          'breadcrumb'
    itemClass:          'nofollow'
    locale:             %locale%
    translation_domain: messages
    
knp_paginator:
    page_range: 10                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: KnpPaginatorBundle:Pagination:sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template     
fos_rest:
   param_fetcher_listener: true
   body_listener: true
   view:
       view_response_listener: force
   format_listener:
       #default_priorities: ['json', 'html', '*/*']
       #prefer_extension: true
       #param_fetcher_listener: true
       #allowed_methods_listener: true    

sensio_framework_extra:
    view:    { annotations: false }
          
jms_serializer:
    metadata:
        directories:
            CoreDomain:
                namespace_prefix: "Table\\CoreDomain"
                path: "@TableApiBundle/Resources/config/serializer/"
            RestaurantBundle:
                namespace_prefix: "Table\\RestaurantBundle"
                path: "@TableApiBundle/Resources/config/serializer/"  
                
genemu_form:
    date: ~ 
    captcha: 
        length:           4
        format:           'png'
        chars:            '0123456789'
        font_size:        18
        font_color:       ['252525', '8B8787', '550707', '3526E6', '88531E']
        font_dir:         %kernel.root_dir%/../web/bundles/genemuform/fonts
        fonts:            ['akbar.ttf', 'brushcut.ttf', 'molten.ttf', 'planetbe.ttf', 'whoobub.ttf']
        background_color: 'DDDDDD'
        border_color:     '000000'
        grayscale:        true
    
vich_uploader:
    db_driver: orm 
    twig: true
    gaufrette: false # set to true to enable gaufrette support
    storage: vich_uploader.storage.file_system
    mappings:
        restaurant_additional_photo:
            uri_prefix: /uploads/media/additionalPhotos
            upload_destination:  %kernel.root_dir%/../web/uploads/media/additionalPhotos
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true 
            namer: vich_uploader.namer_origname     
           
        restaurant_menu_photo:
            uri_prefix: /uploads/media/menuPhotos 
            upload_destination:  %kernel.root_dir%/../web/uploads/media/menuPhotos
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true 
            namer: vich_uploader.namer_origname     
       
        table_type:
            uri_prefix: /uploads/media/tableType
            upload_destination:  %kernel.root_dir%/../web/uploads/media/tableType
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true 
            namer: vich_uploader.namer_origname   
            
        table_map:
            uri_prefix: /uploads/media/tableMap
            upload_destination:  %kernel.root_dir%/../web/uploads/media/tableMap
            delete_on_remove: true
            delete_on_update: true
            inject_on_load: true 
            namer: vich_uploader.namer_origname      
            
hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the 
    #automatic user registration on your site, with data from the provider (facebook. twitter, vkintakte, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: my_user_provider
        confirmation: true
        #account_connector: hwi_oauth.user.provider.fosub_bridge
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_name: main
    fosub:
        #username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebook_id
            twitter: twitter_id
            vkontakte: vkontakte_id
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook_app_id%"
            client_secret:       "%facebook_app_secret%"
            scope:         "email"
            infos_url:     "https://graph.facebook.com/me?fields=username,name,email,picture.type(square)"
            
        twitter:
            type:                twitter
            client_id:           "%twitter_app_id%"
            client_secret:       "%twitter_app_secret%"
            scope:               "email"
            paths:
                email: email
            
        vkontakte:
            type:                vkontakte
            client_id:           "%vkontakte_app_id%"
            client_secret:       "%vkontakte_app_secret%"
            scope:               email, wall, offline
            paths:
                email: email